{
  "snapshot": {
    "stack": {
      "framework": "React 18.2.0 + Vite 5.0.12",
      "routing": "React Router DOM 6.21.3",
      "state": "React Query (@tanstack/react-query 5.79.0)",
      "httpClient": "Axios 1.6.7",
      "forms": "React Hook Form 7.59.0",
      "ui": "Bootstrap 5.3.2 + CSS Modules",
      "testing": "Vitest 3.2.4 + Playwright 1.54.2",
      "language": "JavaScript"
    },
    "versions": {
      "react": "^18.2.0",
      "react-dom": "^18.2.0",
      "@tanstack/react-query": "^5.79.0",
      "react-router-dom": "^6.21.3",
      "axios": "^1.6.7",
      "vite": "^5.0.12",
      "vitest": "^3.2.4",
      "@playwright/test": "^1.54.2"
    },
    "scripts": {
      "dev": "vite",
      "build": "vite build",
      "preview": "vite preview --port 4173",
      "lint": "eslint .",
      "test": "vitest run",
      "test:e2e": "playwright test",
      "e2e:smoke": "playwright test -c playwright.smoke.config.ts"
    },
    "environmentVariables": [
      "VITE_API_URL",
      "VITE_API_TIMEOUT",
      "VITE_ENVIRONMENT",
      "VITE_DEBUG",
      "VITE_ERROR_BOUNDARIES",
      "VITE_LAZY_LOADING",
      "VITE_IMAGE_OPTIMIZATION",
      "VITE_PREFETCH",
      "VITE_IMAGE_PLACEHOLDER",
      "VITE_IMAGE_LAZY_LOAD",
      "VITE_IMAGE_QUALITY",
      "VITE_DEBOUNCE_DELAY",
      "VITE_THROTTLE_DELAY",
      "VITE_INTERSECTION_THRESHOLD",
      "VITE_INTERSECTION_ROOT_MARGIN",
      "VITE_PAGE_SIZE",
      "VITE_INFINITE_SCROLL",
      "VITE_CONTACT_EMAIL",
      "VITE_CONTACT_WHATSAPP",
      "VITE_AUTH_ENABLED",
      "VITE_AUTH_STORAGE_KEY",
      "VITE_USER_STORAGE_KEY"
    ]
  },
  "arquitectura": {
    "estructuraActual": {
      "api": "Cliente HTTP + endpoints",
      "components": "Componentes UI organizados por tipo",
      "hooks": "Hooks personalizados",
      "pages": "Páginas de la aplicación",
      "routes": "Configuración de rutas",
      "services": "Servicios de negocio",
      "config": "Configuración centralizada",
      "constants": "Constantes de la app",
      "utils": "Utilidades",
      "styles": "Estilos globales",
      "assets": "Recursos estáticos",
      "types": "Tipos (JavaScript)",
      "mappers": "Transformación de datos",
      "test": "Configuración de tests"
    },
    "propuestaFeatures": {
      "features": {
        "vehicles": "Todo lo relacionado con vehículos",
        "filters": "Sistema de filtros",
        "auth": "Autenticación",
        "admin": "Panel administrativo"
      },
      "shared": {
        "ui": "Componentes genéricos",
        "hooks": "Hooks compartidos",
        "utils": "Utilidades"
      },
      "app": "Configuración de la app",
      "api": "Cliente HTTP"
    },
    "archivosNucleo": [
      "src/main.jsx",
      "src/App.jsx",
      "src/config/index.js",
      "src/routes/PublicRoutes.jsx",
      "src/routes/AdminRoutes.jsx"
    ]
  },
  "routing": {
    "rutasPublicas": [
      {
        "path": "/",
        "componente": "Home",
        "lazy": true,
        "layout": "Nav + Footer",
        "params": []
      },
      {
        "path": "/vehiculos",
        "componente": "Vehiculos",
        "lazy": true,
        "layout": "Nav + Footer",
        "params": []
      },
      {
        "path": "/vehiculo/:id",
        "componente": "VehiculoDetalle",
        "lazy": true,
        "layout": "Nav + Footer",
        "params": ["id"]
      },
      {
        "path": "/nosotros",
        "componente": "Nosotros",
        "lazy": true,
        "layout": "Nav + Footer",
        "params": []
      }
    ],
    "rutasAdmin": [
      {
        "path": "/admin/login",
        "componente": "Login",
        "lazy": true,
        "layout": "Sin layout",
        "auth": false,
        "params": []
      },
      {
        "path": "/admin/",
        "componente": "Dashboard",
        "lazy": true,
        "layout": "Sin layout",
        "auth": true,
        "params": []
      },
      {
        "path": "/admin/autos",
        "componente": "Lista Autos",
        "lazy": true,
        "layout": "Sin layout",
        "auth": true,
        "params": []
      },
      {
        "path": "/admin/autos/:id/editar",
        "componente": "Editar Auto",
        "lazy": true,
        "layout": "Sin layout",
        "auth": true,
        "params": ["id"]
      }
    ],
    "paginasPrincipales": ["Home", "Vehiculos", "VehiculoDetalle"],
    "paginasSecundarias": ["Nosotros", "Admin routes"]
  },
  "dataLayer": {
    "axios": {
      "archivo": "src/api/axiosInstance.js",
      "baseURL": "http://localhost:3001",
      "timeout": 5000,
      "headers": ["Content-Type: application/json", "Accept: application/json"],
      "instancias": 3,
      "interceptores": {
        "request": "Agregar token automáticamente (solo auth instance)",
        "response": "Manejo de 401 (limpiar localStorage, redirigir)"
      }
    },
    "endpoints": [
      {
        "metodo": "GET",
        "ruta": "/photos/getallphotos",
        "archivo": "src/api/vehiclesApi.js",
        "linea": 35,
        "proposito": "Lista de vehículos"
      },
      {
        "metodo": "POST",
        "ruta": "/photos/getallphotos",
        "archivo": "src/api/vehiclesApi.js",
        "linea": 65,
        "proposito": "Lista con filtros"
      },
      {
        "metodo": "GET",
        "ruta": "/photos/getonephoto/:id",
        "archivo": "src/api/vehiclesApi.js",
        "linea": 95,
        "proposito": "Detalle de vehículo"
      }
    ],
    "reactQuery": {
      "clavesQuery": [
        "['vehicles', JSON.stringify(filters)]",
        "['vehicle', id]"
      ],
      "configuracion": {
        "staleTime": 300000,
        "cacheTime": 1800000,
        "retry": "1-2 intentos",
        "refetchOnWindowFocus": false,
        "enabled": true
      },
      "useInfiniteQuery": {
        "implementado": false,
        "estado": "NO IMPLEMENTADO",
        "oportunidad": "Migrar a useInfiniteQuery para mejor UX y performance"
      },
      "mutations": {
        "archivo": "src/hooks/useCarMutation.js",
        "tipos": ["Crear vehículo", "Actualizar vehículo", "Eliminar vehículo", "Subir imágenes"],
        "invalidaciones": [
          "queryClient.invalidateQueries(['vehicles'])",
          "queryClient.invalidateQueries(['vehicle', id])"
        ]
      }
    }
  },
  "state": {
    "useFilterReducer": {
      "archivo": "src/hooks/filters/useFilterReducer.js",
      "estadoInicial": {
        "isSubmitting": false,
        "isDrawerOpen": false,
        "currentFilters": {},
        "pendingFilters": {},
        "isLoading": false,
        "isError": false,
        "error": null
      },
      "acciones": [
        "SET_PENDING_FILTERS",
        "APPLY_FILTERS",
        "CLEAR_FILTERS",
        "SET_LOADING",
        "SET_ERROR",
        "CLEAR_ERROR"
      ],
      "disparaAplicar": [
        "src/components/vehicles/Filters/filters/FilterFormSimplified/FilterFormSimplified.jsx:288",
        "src/components/vehicles/List/VehiclesList.jsx:45"
      ],
      "reseteaPaginacion": true
    },
    "contexts": [
      {
        "nombre": "GlobalErrorBoundary",
        "archivo": "src/components/ErrorBoundary/GlobalErrorBoundary.jsx",
        "proveedor": "src/main.jsx:35",
        "consumidores": "Toda la aplicación"
      },
      {
        "nombre": "QueryClientProvider",
        "archivo": "src/main.jsx:36",
        "proveedor": "QueryClient con configuración global",
        "consumidores": "Todos los hooks de React Query"
      }
    ],
    "hooksPersonalizados": [
      {
        "nombre": "useVehiclesList",
        "proposito": "Lista de vehículos",
        "archivos": ["VehiclesList.jsx", "AutosGrid.jsx"]
      },
      {
        "nombre": "useVehicleDetail",
        "proposito": "Detalle de vehículo",
        "archivos": ["VehiculoDetalle.jsx"]
      },
      {
        "nombre": "useFilterReducer",
        "proposito": "Estado de filtros",
        "archivos": ["FilterFormSimplified.jsx"]
      },
      {
        "nombre": "useErrorHandler",
        "proposito": "Manejo de errores",
        "archivos": ["VehiclesList.jsx", "VehiculoDetalle.jsx"]
      },
      {
        "nombre": "useImageOptimization",
        "proposito": "Optimización de imágenes",
        "archivos": ["CardAuto.jsx", "OptimizedImage.jsx"]
      },
      {
        "nombre": "useAuth",
        "proposito": "Autenticación",
        "archivos": ["RequireAuth.jsx", "LoginForm.jsx"]
      },
      {
        "nombre": "useScrollPosition",
        "proposito": "Posición de scroll",
        "archivos": ["ScrollToTop.jsx"]
      },
      {
        "nombre": "usePreloadRoute",
        "proposito": "Preload de rutas",
        "archivos": ["CardAuto.jsx"]
      }
    ]
  },
  "ui": {
    "componentesTop20": [
      {
        "nombre": "useCarMutation",
        "loc": 435,
        "responsabilidad": "Mutaciones CRUD",
        "archivo": "src/hooks/useCarMutation.js"
      },
      {
        "nombre": "ErrorBoundary",
        "loc": 330,
        "responsabilidad": "Manejo de errores",
        "archivo": "src/components/ErrorBoundary/ErrorBoundary.jsx"
      },
      {
        "nombre": "AdminActions",
        "loc": 341,
        "responsabilidad": "Acciones admin",
        "archivo": "src/components/vehicles/AdminActions.jsx"
      },
      {
        "nombre": "useAdminMutations",
        "loc": 195,
        "responsabilidad": "Mutaciones admin",
        "archivo": "src/hooks/useAdminMutations.js"
      },
      {
        "nombre": "useErrorHandler",
        "loc": 199,
        "responsabilidad": "Hook de errores",
        "archivo": "src/hooks/useErrorHandler.js"
      },
      {
        "nombre": "GlobalErrorBoundary",
        "loc": 149,
        "responsabilidad": "Error boundary global",
        "archivo": "src/components/ErrorBoundary/GlobalErrorBoundary.jsx"
      },
      {
        "nombre": "useFilterReducer",
        "loc": 188,
        "responsabilidad": "Estado de filtros",
        "archivo": "src/hooks/filters/useFilterReducer.js"
      },
      {
        "nombre": "useVehicleData",
        "loc": 135,
        "responsabilidad": "Datos de vehículos",
        "archivo": "src/hooks/useVehicleData.js"
      },
      {
        "nombre": "useScrollPosition",
        "loc": 126,
        "responsabilidad": "Posición de scroll",
        "archivo": "src/hooks/useScrollPosition.js"
      },
      {
        "nombre": "useAuth",
        "loc": 125,
        "responsabilidad": "Autenticación",
        "archivo": "src/hooks/useAuth.js"
      },
      {
        "nombre": "FilterFormSimplified",
        "loc": 177,
        "responsabilidad": "Formulario de filtros",
        "archivo": "src/components/vehicles/Filters/filters/FilterFormSimplified/FilterFormSimplified.jsx"
      },
      {
        "nombre": "VehiclesList",
        "loc": 72,
        "responsabilidad": "Lista principal",
        "archivo": "src/components/vehicles/List/VehiclesList.jsx"
      },
      {
        "nombre": "AutosGrid",
        "loc": 72,
        "responsabilidad": "Grid de vehículos",
        "archivo": "src/components/vehicles/List/ListAutos/AutosGrid.jsx"
      },
      {
        "nombre": "OptimizedImage",
        "loc": 186,
        "responsabilidad": "Imagen optimizada",
        "archivo": "src/components/ui/OptimizedImage/OptimizedImage.jsx"
      },
      {
        "nombre": "ImageCarousel",
        "loc": 195,
        "responsabilidad": "Carrusel de imágenes",
        "archivo": "src/components/ui/ImageCarousel/ImageCarousel.jsx"
      },
      {
        "nombre": "MultiSelect",
        "loc": 178,
        "responsabilidad": "Select múltiple",
        "archivo": "src/components/ui/MultiSelect/MultiSelect.jsx"
      },
      {
        "nombre": "RangeSlider",
        "loc": 173,
        "responsabilidad": "Slider de rango",
        "archivo": "src/components/ui/RangeSlider/RangeSlider.jsx"
      },
      {
        "nombre": "CardAuto",
        "loc": 150,
        "responsabilidad": "Tarjeta de vehículo",
        "archivo": "src/components/vehicles/Card/CardAuto.jsx"
      },
      {
        "nombre": "CardDetalle",
        "loc": 150,
        "responsabilidad": "Detalle de vehículo",
        "archivo": "src/components/vehicles/Detail/CardDetalle/CardDetalle.jsx"
      },
      {
        "nombre": "ScrollToTop",
        "loc": 71,
        "responsabilidad": "Scroll to top",
        "archivo": "src/components/ui/ScrollToTop/ScrollToTop.jsx"
      }
    ],
    "contenedores": ["VehiclesList", "FilterFormSimplified", "VehiclesErrorBoundary"],
    "presentacionales": ["CardAuto", "AutosGrid", "OptimizedImage", "Button"],
    "hotspotsReRender": [
      {
        "problema": "Props muy grandes",
        "archivo": "src/components/vehicles/List/VehiclesList.jsx:45",
        "solucion": "Ya usa useMemo"
      },
      {
        "problema": "Funciones inline",
        "archivo": "src/components/vehicles/Filters/filters/FilterFormSimplified/FilterFormSimplified.jsx:240",
        "solucion": "Usar useCallback"
      },
      {
        "problema": "Dependencias sospechosas",
        "archivo": "src/hooks/vehicles/useVehiclesList.js:15",
        "riesgo": "Medio"
      }
    ],
    "manejoImagenes": {
      "archivos": [
        "src/components/ui/OptimizedImage/OptimizedImage.jsx:150",
        "src/components/ui/ImageCarousel/ImageCarousel.jsx:115"
      ],
      "optimizaciones": {
        "loading": "lazy",
        "decoding": "async",
        "widthHeight": "No detectado",
        "alt": "Implementado",
        "srcSet": "Implementado"
      }
    }
  },
  "perf": {
    "tamañoBuild": "No medido",
    "modulosPesados": [
      {
        "modulo": "useCarMutation.js",
        "loc": 435,
        "razon": "Lógica CRUD compleja",
        "impacto": "Alto"
      },
      {
        "modulo": "AdminActions.jsx",
        "loc": 341,
        "razon": "Componente admin pesado",
        "impacto": "Medio"
      },
      {
        "modulo": "ErrorBoundary.jsx",
        "loc": 330,
        "razon": "Manejo de errores robusto",
        "impacto": "Medio"
      },
      {
        "modulo": "OptimizedImage.jsx",
        "loc": 186,
        "razon": "Optimización de imágenes",
        "impacto": "Medio"
      },
      {
        "modulo": "ImageCarousel.jsx",
        "loc": 195,
        "razon": "Carrusel interactivo",
        "impacto": "Medio"
      }
    ],
    "codeSplitting": {
      "implementado": ["Páginas principales", "Componentes admin"],
      "oportunidades": ["OptimizedImage", "ImageCarousel", "AdminActions", "useCarMutation"]
    }
  },
  "errors": {
    "errorBoundary": {
      "existe": true,
      "archivo": "src/components/ErrorBoundary/GlobalErrorBoundary.jsx",
      "ubicacion": "src/main.jsx:35",
      "caracteristicas": [
        "Captura errores de JavaScript",
        "UI de error amigable",
        "Logging de errores",
        "Recuperación automática",
        "Reporte a monitoreo (futuro)"
      ]
    },
    "vistasEstandar": {
      "loading": [
        "LoadingSpinner",
        "ListAutosSkeleton",
        "DetalleSkeleton"
      ],
      "empty": "No detectado componente específico",
      "error": [
        "ErrorState",
        "Alert",
        "ErrorMessage"
      ]
    },
    "manejoErroresHTTP": {
      "archivo": "src/api/axiosInstance.js:60-75",
      "mapeo": {
        "401": "Limpiar localStorage, redirigir a login",
        "otros": "Promise.reject para manejo en componentes"
      },
      "ui": [
        "Componentes específicos de error",
        "Toast notifications (react-hot-toast)",
        "Error boundaries para captura"
      ]
    }
  },
  "a11y": {
    "imagenesSinAlt": [
      {
        "archivo": "src/components/ui/ImageCarousel/ImageCarousel.jsx:115",
        "alt": "Implementado"
      },
      {
        "archivo": "src/components/ui/OptimizedImage/OptimizedImage.jsx:150",
        "alt": "Implementado"
      }
    ],
    "inputsSinLabel": [
      {
        "archivo": "src/components/ui/MultiSelect/MultiSelect.jsx:80",
        "label": "Implementado",
        "aria": "Implementado"
      },
      {
        "archivo": "src/components/ui/FormInput/FormInput.jsx:15",
        "label": "Implementado"
      }
    ],
    "encabezadosSemanticos": {
      "archivo": "src/components/vehicles/Filters/filters/FilterFormSimplified/FilterFormSimplified.jsx:270",
      "implementado": true
    },
    "metadatos": {
      "estado": "No detectado",
      "recomendacion": "Implementar React Helmet o similar"
    }
  },
  "quickWins": [
    {
      "oportunidad": "Migrar a useInfiniteQuery",
      "descripcion": "Reemplazar paginación manual por infinite scroll",
      "impacto": "Alto",
      "esfuerzo": "Medio",
      "riesgo": "Bajo"
    },
    {
      "oportunidad": "Optimizar queryKey de filtros",
      "descripcion": "Evitar JSON.stringify en queryKey",
      "impacto": "Alto",
      "esfuerzo": "Bajo",
      "riesgo": "Bajo"
    },
    {
      "oportunidad": "Implementar React.memo en componentes pesados",
      "descripcion": "Reducir re-renders innecesarios",
      "impacto": "Medio",
      "esfuerzo": "Bajo",
      "riesgo": "Bajo"
    },
    {
      "oportunidad": "Agregar width/height a imágenes",
      "descripcion": "Mejorar CLS (Cumulative Layout Shift)",
      "impacto": "Medio",
      "esfuerzo": "Bajo",
      "riesgo": "Bajo"
    },
    {
      "oportunidad": "Migrar a organización por features",
      "descripcion": "Mejorar mantenibilidad",
      "impacto": "Medio",
      "esfuerzo": "Alto",
      "riesgo": "Medio"
    },
    {
      "oportunidad": "Implementar metadatos dinámicos",
      "descripcion": "Mejorar SEO",
      "impacto": "Medio",
      "esfuerzo": "Medio",
      "riesgo": "Bajo"
    },
    {
      "oportunidad": "Optimizar bundle con code splitting",
      "descripcion": "Reducir tamaño inicial",
      "impacto": "Medio",
      "esfuerzo": "Medio",
      "riesgo": "Bajo"
    },
    {
      "oportunidad": "Agregar tests de integración",
      "descripcion": "Mejorar cobertura",
      "impacto": "Medio",
      "esfuerzo": "Alto",
      "riesgo": "Bajo"
    },
    {
      "oportunidad": "Implementar error boundaries específicos",
      "descripcion": "Mejorar UX de errores",
      "impacto": "Bajo",
      "esfuerzo": "Medio",
      "riesgo": "Bajo"
    },
    {
      "oportunidad": "Optimizar imports",
      "descripcion": "Reducir bundle size",
      "impacto": "Bajo",
      "esfuerzo": "Bajo",
      "riesgo": "Bajo"
    }
  ],
  "smokeTest": [
    {
      "categoria": "Navegación Principal",
      "pasos": [
        "Ir a / → Home se carga",
        "Ir a /vehiculos → Lista se carga",
        "Ir a /nosotros → Página se carga"
      ]
    },
    {
      "categoria": "Listado de Vehículos",
      "pasos": [
        "Grid de vehículos visible",
        "Tarjetas con imágenes cargan",
        "Botón \"Cargar más\" funciona"
      ]
    },
    {
      "categoria": "Filtros",
      "pasos": [
        "Formulario de filtros visible",
        "Seleccionar marca → Filtros se aplican",
        "Botón \"Limpiar filtros\" funciona"
      ]
    },
    {
      "categoria": "Detalle de Vehículo",
      "pasos": [
        "Click en \"Ver más\" → Navega a detalle",
        "Imágenes del carrusel cargan",
        "Información del vehículo visible"
      ]
    },
    {
      "categoria": "Scroll y Navegación",
      "pasos": [
        "Scroll to top funciona",
        "Navegación entre páginas fluida",
        "Botón \"Volver\" funciona"
      ]
    }
  ],
  "delicateFiles": [
    {
      "archivo": "src/config/index.js",
      "razon": "Configuración centralizada",
      "impacto": "Alto - Toda la app"
    },
    {
      "archivo": "src/api/axiosInstance.js",
      "razon": "Cliente HTTP global",
      "impacto": "Alto - Todas las llamadas API"
    },
    {
      "archivo": "src/hooks/vehicles/useVehiclesList.js",
      "razon": "Hook principal de datos",
      "impacto": "Alto - Listado de vehículos"
    },
    {
      "archivo": "src/hooks/filters/useFilterReducer.js",
      "razon": "Estado de filtros",
      "impacto": "Alto - Sistema de filtros"
    },
    {
      "archivo": "src/components/ErrorBoundary/GlobalErrorBoundary.jsx",
      "razon": "Manejo global de errores",
      "impacto": "Alto - Toda la app"
    },
    {
      "archivo": "src/routes/PublicRoutes.jsx",
      "razon": "Rutas públicas",
      "impacto": "Alto - Navegación"
    },
    {
      "archivo": "src/main.jsx",
      "razon": "Punto de entrada",
      "impacto": "Alto - Inicialización"
    },
    {
      "archivo": "src/App.jsx",
      "razon": "Componente raíz",
      "impacto": "Alto - Estructura de la app"
    },
    {
      "archivo": "src/api/vehiclesApi.js",
      "razon": "API de vehículos",
      "impacto": "Medio - Datos de vehículos"
    },
    {
      "archivo": "src/hooks/useErrorHandler.js",
      "razon": "Hook de errores",
      "impacto": "Medio - Manejo de errores"
    }
  ],
  "resumenEjecutivo": {
    "estadoActual": {
      "baseSolida": true,
      "arquitecturaModular": true,
      "lazyLoading": true,
      "errorHandling": true,
      "filtrosDesconectados": true,
      "paginacionManual": true,
      "performance": "Oportunidades de optimización"
    },
    "prioridadesRefactorizacion": [
      "Conectar filtros a API",
      "Migrar a useInfiniteQuery",
      "Optimizar re-renders",
      "Mejorar SEO y a11y",
      "Reorganizar estructura"
    ],
    "riesgoRefactorizacion": {
      "bajo": "La mayoría de cambios son optimizaciones seguras",
      "medio": "Migración a features requiere planificación",
      "alto": "Cambios en API requieren testing exhaustivo"
    }
  }
}

